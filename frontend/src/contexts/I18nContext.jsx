import React, { createContext, useContext, useMemo, useState, useEffect } from 'react'

const I18nContext = createContext({
  lang: 'en',
  t: (key) => key,
  setLang: () => {}
})

const translations = {
  en: {
    // General
    'app.title': 'ZamaSchool - FHE Learning Platform',
    'app.subtitle': "Learn Zama's Fully Homomorphic Encryption technology and experience privacy-preserving blockchain computing",
    'sidebar.title': 'Zama Learning Catalog',
    'sidebar.subtitle': 'Click chapter to start learning',
    'progress.title': 'Learning Progress',
    'wallet.connected': 'Wallet Connected',
    'wallet.required.title': 'Wallet Connection Required',
    'wallet.required.desc': "Please connect your wallet to continue learning this chapter's content.",
    'nav.prev': '← Previous',
    'nav.next': 'Next →',
    'footer.text': 'Powered by Zama | Fully Homomorphic Encryption Learning Platform',
    // Chapters
    'chapter.intro': 'Course Introduction',
    'chapter.zama_intro': 'Zama Technology Introduction',
    'chapter.sdk': 'SDK Introduction',
    'chapter.number_storage': 'Encrypted Number Storage',
    'chapter.number_decrypt': 'Number Decryption',
    'chapter.address_storage': 'Encrypted Address Storage',
    'chapter.address_decrypt': 'Address Decryption',
    'chapter.onchain_decrypt': 'Onchain Decryption Request',
    'chapter.calculations': 'FHE Encrypted Calculations',
    'chapter.number_comparison': 'Encrypted Number Comparison',
    'chapter.conclusion': 'Learning Summary',
    // Intro
    'intro.path_guide': 'Learning Path Guide',
    'intro.welcome': "Welcome to ZamaSchool! This is an interactive platform designed specifically for learning Zama's Fully Homomorphic Encryption technology. Follow these steps to learn progressively:",
    'intro.prep_title': 'Preparation Before Learning',
    'intro.experience_title': 'Learning Experience:',
    'intro.experience_1': 'Experience real blockchain interaction processes',
    'intro.experience_2': 'Learn encrypted data storage and reading operations',
    'intro.experience_3': "Practice using Zama's FHE capabilities",
    'intro.experience_4': 'Understand how decentralized applications work',
    'intro.privacy_title': 'Privacy Protection Features:',
    'intro.privacy_1': 'Data is fully encrypted on the blockchain',
    'intro.privacy_2': 'Only you can decrypt your own data',
    'intro.privacy_3': 'Supports mathematical operations on encrypted data',
    'intro.privacy_4': 'Third parties cannot access your private information',
    // Chapter descriptions
    'desc.zama_intro': 'Deep dive into Zama FHE technology principles and architecture',
    'desc.sdk': "Understand basic concepts and configuration of Zama frontend SDK",
    'desc.number_storage': 'Learn how to encrypt numbers and store them on blockchain',
    'desc.number_decrypt': 'Master methods for reading and decrypting numbers from blockchain',
    'desc.address_storage': 'Experience encrypted storage of Ethereum addresses',
    'desc.address_decrypt': 'Practice address data decryption operations',
    'desc.onchain_decrypt': 'Learn requestDecryption for onchain asynchronous decryption',
    'desc.calculations': 'Explore the powerful capabilities of homomorphic encrypted computation',
    'desc.number_comparison': 'Learn encrypted number comparison operations and conditional logic',
    // Conclusion
    'conclusion.title': 'Congratulations on Completing the Course!',
    'conclusion.desc': 'You have mastered the core concepts of Zama FHE technology:',
    'conclusion.li1': 'Understood the basic principles of Fully Homomorphic Encryption',
    'conclusion.li2': 'Learned to use the Zama frontend SDK',
    'conclusion.li3': 'Mastered encrypted data storage and retrieval',
    'conclusion.li4': 'Experienced privacy-preserving computation capabilities',
    'conclusion.next_steps': 'Next Steps:',
    'conclusion.next1': 'Try building your own privacy-preserving DApp',
    'conclusion.next2': "Deep dive into advanced features of Zama's Solidity library",
    'conclusion.next3': 'Explore more complex FHE algorithms and application scenarios',
    'conclusion.next4': 'Join the Zama community and share your learning experience',
    // ZamaIntro
    'zama.title': 'Zama Technology Introduction',
    'zama.what_is': 'What is Zama?',
    'zama.what_is_desc': "Zama is a pioneering company in Fully Homomorphic Encryption (FHE) technology, dedicated to enabling blockchain applications to perform computations directly on encrypted data without decryption, thus achieving true privacy-preserving computation.",
    'zama.core_tech': 'Core Technologies:',
    'zama.core_tech_1': 'Fully Homomorphic Encryption (FHE)',
    'zama.core_tech_2': 'Zero-Knowledge Proof Integration',
    'zama.core_tech_3': 'Privacy-Preserving Smart Contracts',
    'zama.core_tech_4': 'Programmable Encryption',
    'zama.use_cases': 'Application Scenarios:',
    'zama.use_case_1': 'Private DeFi Protocols',
    'zama.use_case_2': 'Confidential Voting Systems',
    'zama.use_case_3': 'Private Auction Platforms',
    'zama.use_case_4': 'Protected AI Computation',
    'zama.fhe_principles': 'Fully Homomorphic Encryption Principles',
    'zama.traditional_vs_fhe': 'Traditional Encryption vs FHE:',
    'zama.traditional': 'Traditional Encryption',
    'zama.traditional_desc': 'Data must be decrypted before computation\nData exposed during computation\nLimited privacy protection',
    'zama.fhe': 'FHE Encryption',
    'zama.fhe_desc': 'Compute directly on encrypted data\nData remains encrypted at all times\nComplete privacy protection',
    'zama.fhe_examples': 'FHE Operation Examples:',
    'zama.traditional_approach': '// Traditional approach:',
    'zama.fhe_approach': '// FHE approach:',
    'zama.architecture': 'FHEVM Architecture Components',
    'zama.architecture_desc': "Zama's FHEVM (Fully Homomorphic Encryption Virtual Machine) is a complete privacy-preserving computation ecosystem:",
    'zama.solidity_lib': 'Solidity Library',
    'zama.solidity_lib_desc': 'Provides encrypted data types (euint32, ebool, etc.) and FHE operation functions',
    'zama.kms': 'KMS Key Management',
    'zama.kms_desc': 'Distributed key generation and management system ensuring key security',
    'zama.coprocessor': 'Coprocessor',
    'zama.coprocessor_desc': 'Specialized processing units for executing FHE computations with optimized performance',
    'zama.gateway': 'Gateway',
    'zama.gateway_desc': 'Coordinates encrypted inputs, access control, and cross-chain bridging',
    'zama.relayer': 'Relayer',
    'zama.relayer_desc': 'Service layer connecting users with FHE infrastructure',
    'zama.oracle': 'Oracle',
    'zama.oracle_desc': 'Handles asynchronous decryption and external data integration',
    'zama.data_types': 'Supported Encrypted Data Types',
    'zama.ebool': 'Encrypted Boolean',
    'zama.ebool_desc': '2-bit encrypted boolean type',
    'zama.euints': 'Encrypted Integers',
    'zama.euints_desc': 'Unsigned integers of various bit lengths',
    'zama.eaddress': 'Encrypted Address',
    'zama.eaddress_desc': '160-bit Ethereum address type',
    'zama.euint256': 'Large Integer',
    'zama.euint256_desc': '256-bit large number type',
    'zama.operations': 'FHE Operations',
    'zama.arithmetic': 'Arithmetic Operations',
    'zama.comparison': 'Comparison Operations',
    'zama.logical': 'Logical Operations',
    'zama.learning_journey': 'Your Learning Journey Ahead',
    'zama.learning_journey_desc': 'Through this course, you will gradually master the core concepts and practical applications of Zama FHE technology:',
    'zama.fundamentals': 'Fundamentals',
    'zama.fundamentals_1': 'SDK configuration and initialization',
    'zama.fundamentals_2': 'Encrypted data storage',
    'zama.fundamentals_3': 'User decryption operations',
    'zama.advanced': 'Advanced Topics',
    'zama.advanced_1': 'Onchain asynchronous decryption',
    'zama.advanced_2': 'FHE computation operations',
    'zama.advanced_3': 'Complex application scenarios',
    'zama.ready': 'Ready to start your privacy computation journey?',
    // SDK Demo
    'sdk.title': 'Step 1: Zama Frontend SDK Introduction',
    'sdk.what_is': 'What is Zama SDK?',
    'sdk.what_is_desc': 'Zama SDK is a JavaScript library used to interact with FHEVM (Fully Homomorphic Encryption Virtual Machine) in frontend applications.',
    'sdk.feature_1': 'Supports data encryption and decryption',
    'sdk.feature_2': 'Seamless integration with smart contracts',
    'sdk.feature_3': 'Protects user data privacy',
    'sdk.code_example': 'Frontend Code Example:',
    'sdk.step1': 'Step 1: Install SDK',
    'sdk.install_btn': 'Click to Install SDK',
    'sdk.install_success': 'SDK installed successfully!',
    'sdk.step2': 'Step 2: Initialize SDK',
    'sdk.init_desc': 'Click the button below to initialize the Zama SDK. This will create an FHEVM instance for subsequent encryption operations.',
    'sdk.connect_wallet': 'Please connect your wallet before initializing the SDK',
    'sdk.initializing': 'Initializing...',
    'sdk.init_btn': 'Click to Initialize SDK',
    'sdk.init_success': 'SDK initialized successfully!',
    'sdk.init_failed': 'Initialization failed:',
    'sdk.instance_created': 'FHEVM Instance Created',
    'sdk.instance_desc': 'SDK has been successfully initialized, now you can perform encryption operations!',
    'sdk.config_title': 'Instance Configuration:',
    'sdk.config_network': 'Network: Sepolia Testnet',
    'sdk.config_chain': 'Chain ID: 11155111',
    'sdk.config_gateway': 'Gateway Chain ID: 55815',
    'sdk.config_relayer': 'Relayer Service: Connected',
    'sdk.next_learn': 'What You Will Learn Next:',
    'sdk.next_1': 'Encrypted number storage',
    'sdk.next_2': 'Number decryption and retrieval',
    'sdk.next_3': 'Encrypted address storage',
    'sdk.next_4': 'Address decryption and retrieval',
    'sdk.next_5': 'FHE calculation operations',
    'sdk.note': 'Note:',
    'sdk.note_desc': 'Please complete SDK initialization before proceeding to the next step. The initialization process creates a connection to the Zama network, which is a prerequisite for performing encryption operations.'
  },
  zh: {
    'app.title': 'ZamaSchool - FHE 学习平台',
    'app.subtitle': '学习 Zama 的全同态加密技术，体验隐私保护的区块链计算',
    'sidebar.title': 'Zama 学习目录',
    'sidebar.subtitle': '点击章节开始学习',
    'progress.title': '学习进度',
    'wallet.connected': '钱包已连接',
    'wallet.required.title': '需要连接钱包',
    'wallet.required.desc': '请先连接钱包以继续学习本章节内容。',
    'nav.prev': '← 上一章',
    'nav.next': '下一章 →',
    'footer.text': '由 Zama 驱动 | 全同态加密学习平台',
    'chapter.intro': '课程简介',
    'chapter.zama_intro': 'Zama 技术介绍',
    'chapter.sdk': 'SDK 介绍',
    'chapter.number_storage': '加密数字存储',
    'chapter.number_decrypt': '数字解密',
    'chapter.address_storage': '加密地址存储',
    'chapter.address_decrypt': '地址解密',
    'chapter.onchain_decrypt': '链上解密请求',
    'chapter.calculations': 'FHE 加密计算',
    'chapter.number_comparison': '加密数字比较',
    'chapter.conclusion': '学习总结',
    'intro.path_guide': '学习路径指引',
    'intro.welcome': '欢迎来到 ZamaSchool！这是一个专为学习 Zama 全同态加密技术而设计的交互式平台。请按以下步骤循序渐进地学习：',
    'intro.prep_title': '学习前准备',
    'intro.experience_title': '学习体验：',
    'intro.experience_1': '体验真实的区块链交互流程',
    'intro.experience_2': '学习加密数据的存储与读取操作',
    'intro.experience_3': '实践使用 Zama 的 FHE 能力',
    'intro.experience_4': '理解去中心化应用的工作方式',
    'intro.privacy_title': '隐私保护特性：',
    'intro.privacy_1': '数据在链上始终加密存储',
    'intro.privacy_2': '只有你可以解密自己的数据',
    'intro.privacy_3': '支持对加密数据进行数学运算',
    'intro.privacy_4': '第三方无法获取你的隐私信息',
    'desc.zama_intro': '深入了解 Zama FHE 技术原理与架构',
    'desc.sdk': '理解 Zama 前端 SDK 的基本概念与配置',
    'desc.number_storage': '学习如何对数字加密并上链存储',
    'desc.number_decrypt': '掌握从区块链读取并解密数字的方法',
    'desc.address_storage': '体验以太坊地址的加密存储',
    'desc.address_decrypt': '练习地址数据的解密操作',
    'desc.onchain_decrypt': '学习使用 requestDecryption 进行链上异步解密',
    'desc.calculations': '探索同态加密计算的强大能力',
    'desc.number_comparison': '学习加密数字比较与条件逻辑',
    'conclusion.title': '🎉 恭喜完成本课程！',
    'conclusion.desc': '你已经掌握了 Zama FHE 技术的核心概念：',
    'conclusion.li1': '✅ 理解全同态加密的基本原理',
    'conclusion.li2': '✅ 学会使用 Zama 前端 SDK',
    'conclusion.li3': '✅ 掌握加密数据的存储与读取',
    'conclusion.li4': '✅ 体验隐私保护计算能力',
    'conclusion.next_steps': '🚀 下一步：',
    'conclusion.next1': '尝试构建你自己的隐私保护 DApp',
    'conclusion.next2': '深入学习 Zama Solidity 库的高级特性',
    'conclusion.next3': '探索更复杂的 FHE 算法与应用场景',
    'conclusion.next4': '加入 Zama 社区并分享你的学习经验',
    // ZamaIntro
    'zama.title': 'Zama 技术介绍',
    'zama.what_is': '什么是 Zama？',
    'zama.what_is_desc': 'Zama 是全同态加密（FHE - Fully Homomorphic Encryption）技术的先驱企业，致力于让区块链应用能够在加密数据上直接进行计算，而无需解密数据，从而实现真正的隐私保护计算。',
    'zama.core_tech': '核心技术：',
    'zama.core_tech_1': '全同态加密（FHE）',
    'zama.core_tech_2': '零知识证明集成',
    'zama.core_tech_3': '隐私保护智能合约',
    'zama.core_tech_4': '可编程加密',
    'zama.use_cases': '应用场景：',
    'zama.use_case_1': '隐私 DeFi 协议',
    'zama.use_case_2': '机密投票系统',
    'zama.use_case_3': '私有拍卖平台',
    'zama.use_case_4': '保护性 AI 计算',
    'zama.fhe_principles': '全同态加密技术原理',
    'zama.traditional_vs_fhe': '传统加密 vs FHE：',
    'zama.traditional': '传统加密',
    'zama.traditional_desc': '数据必须先解密才能计算\n计算过程中数据暴露\n隐私保护有限',
    'zama.fhe': 'FHE 加密',
    'zama.fhe_desc': '直接在加密数据上计算\n数据始终保持加密状态\n完全隐私保护',
    'zama.fhe_examples': 'FHE 运算示例：',
    'zama.traditional_approach': '// 传统方式：',
    'zama.fhe_approach': '// FHE 方式：',
    'zama.architecture': 'FHEVM 架构组件',
    'zama.architecture_desc': 'Zama 的 FHEVM（全同态加密虚拟机）是一个完整的隐私保护计算生态系统：',
    'zama.solidity_lib': 'Solidity 库',
    'zama.solidity_lib_desc': '提供加密数据类型（euint32、ebool 等）和 FHE 运算函数',
    'zama.kms': 'KMS 密钥管理',
    'zama.kms_desc': '分布式密钥生成和管理系统，确保密钥安全',
    'zama.coprocessor': '协处理器',
    'zama.coprocessor_desc': '执行 FHE 计算的专用处理单元，优化性能',
    'zama.gateway': '网关',
    'zama.gateway_desc': '协调加密输入、访问控制和跨链桥接',
    'zama.relayer': '中继器',
    'zama.relayer_desc': '连接用户和 FHE 基础设施的服务层',
    'zama.oracle': '预言机',
    'zama.oracle_desc': '处理异步解密和外部数据集成',
    'zama.data_types': '支持的加密数据类型',
    'zama.ebool': '加密布尔值',
    'zama.ebool_desc': '2 位加密布尔类型',
    'zama.euints': '加密整数',
    'zama.euints_desc': '不同位数的无符号整数',
    'zama.eaddress': '加密地址',
    'zama.eaddress_desc': '160 位以太坊地址类型',
    'zama.euint256': '大整数',
    'zama.euint256_desc': '256 位大数类型',
    'zama.operations': 'FHE 运算操作',
    'zama.arithmetic': '算术运算',
    'zama.comparison': '比较运算',
    'zama.logical': '逻辑运算',
    'zama.learning_journey': '接下来的学习之旅',
    'zama.learning_journey_desc': '通过本课程，你将逐步掌握 Zama FHE 技术的核心概念和实际应用：',
    'zama.fundamentals': '基础篇',
    'zama.fundamentals_1': 'SDK 配置和初始化',
    'zama.fundamentals_2': '加密数据存储',
    'zama.fundamentals_3': '用户解密操作',
    'zama.advanced': '进阶篇',
    'zama.advanced_1': '链上异步解密',
    'zama.advanced_2': 'FHE 计算操作',
    'zama.advanced_3': '复杂应用场景',
    'zama.ready': '准备好开始你的隐私计算之旅了吗？',
    // SDK Demo
    'sdk.title': '步骤 1：Zama 前端 SDK 介绍',
    'sdk.what_is': '什么是 Zama SDK？',
    'sdk.what_is_desc': 'Zama SDK 是一个 JavaScript 库，用于在前端应用中与 FHEVM（全同态加密虚拟机）进行交互。',
    'sdk.feature_1': '支持数据加密和解密',
    'sdk.feature_2': '与智能合约无缝集成',
    'sdk.feature_3': '保护用户数据隐私',
    'sdk.code_example': '前端代码示例：',
    'sdk.step1': '步骤 1：安装 SDK',
    'sdk.install_btn': '点击安装 SDK',
    'sdk.install_success': 'SDK 安装完成！',
    'sdk.step2': '步骤 2：初始化 SDK',
    'sdk.init_desc': '点击下面按钮来初始化 Zama SDK。这将创建 FHEVM 实例，用于后续的加密操作。',
    'sdk.connect_wallet': '请先连接钱包再初始化 SDK',
    'sdk.initializing': '初始化中...',
    'sdk.init_btn': '点击初始化 SDK',
    'sdk.init_success': 'SDK 初始化完成！',
    'sdk.init_failed': '初始化失败：',
    'sdk.instance_created': 'FHEVM 实例已创建',
    'sdk.instance_desc': 'SDK 已成功初始化，现在可以进行加密操作了！',
    'sdk.config_title': '实例配置信息：',
    'sdk.config_network': '网络：Sepolia 测试网',
    'sdk.config_chain': '链 ID：11155111',
    'sdk.config_gateway': 'Gateway 链 ID：55815',
    'sdk.config_relayer': 'Relayer 服务：已连接',
    'sdk.next_learn': '接下来你将学习：',
    'sdk.next_1': '数字加密存储',
    'sdk.next_2': '数字解密读取',
    'sdk.next_3': '地址加密存储',
    'sdk.next_4': '地址解密读取',
    'sdk.next_5': 'FHE 计算操作',
    'sdk.note': '注意：',
    'sdk.note_desc': '请完成 SDK 初始化后再进行下一步操作。初始化过程会创建与 Zama 网络的连接，这是进行加密操作的前提条件。'
  },
  fr: {
    'app.title': 'ZamaSchool - Plateforme d’apprentissage FHE',
    'app.subtitle': "Apprenez le chiffrement homomorphe complet de Zama et découvrez l’informatique préservant la vie privée sur blockchain",
    'sidebar.title': 'Catalogue d’apprentissage Zama',
    'sidebar.subtitle': 'Cliquez sur un chapitre pour commencer',
    'progress.title': 'Progression',
    'wallet.connected': 'Portefeuille connecté',
    'wallet.required.title': 'Connexion du portefeuille requise',
    'wallet.required.desc': 'Veuillez connecter votre portefeuille pour continuer ce chapitre.',
    'nav.prev': '← Précédent',
    'nav.next': 'Suivant →',
    'footer.text': 'Propulsé par Zama | Plateforme d’apprentissage FHE',
    'chapter.intro': 'Introduction du cours',
    'chapter.zama_intro': 'Introduction à la technologie Zama',
    'chapter.sdk': 'Introduction au SDK',
    'chapter.number_storage': 'Stockage de nombres chiffrés',
    'chapter.number_decrypt': 'Déchiffrement de nombres',
    'chapter.address_storage': 'Stockage d’adresses chiffrées',
    'chapter.address_decrypt': 'Déchiffrement d’adresses',
    'chapter.onchain_decrypt': 'Demande de déchiffrement on‑chain',
    'chapter.calculations': 'Calculs chiffrés FHE',
    'chapter.number_comparison': 'Comparaison de nombres chiffrés',
    'chapter.conclusion': 'Résumé',
    'intro.path_guide': 'Guide du parcours d’apprentissage',
    'intro.welcome': "Bienvenue sur ZamaSchool ! Une plateforme interactive dédiée à l’apprentissage du FHE de Zama. Suivez ces étapes pour progresser :",
    'intro.prep_title': 'Préparation avant de commencer',
    'intro.experience_title': 'Expérience d’apprentissage :',
    'intro.experience_1': 'Vivez de vraies interactions blockchain',
    'intro.experience_2': 'Apprenez le stockage et la lecture de données chiffrées',
    'intro.experience_3': 'Pratiquez les capacités FHE de Zama',
    'intro.experience_4': 'Comprenez le fonctionnement des DApps',
    'intro.privacy_title': 'Fonctionnalités de confidentialité :',
    'intro.privacy_1': 'Données entièrement chiffrées sur la blockchain',
    'intro.privacy_2': 'Vous seul pouvez déchiffrer vos données',
    'intro.privacy_3': 'Prise en charge des opérations mathématiques sur données chiffrées',
    'intro.privacy_4': 'Aucun tiers n’accède à vos informations privées',
    'desc.zama_intro': 'Plongez dans les principes et l’architecture du FHE de Zama',
    'desc.sdk': 'Comprenez les concepts de base et la configuration du SDK frontend de Zama',
    'desc.number_storage': 'Apprenez à chiffrer des nombres et les stocker on‑chain',
    'desc.number_decrypt': 'Maîtrisez la lecture et le déchiffrement de nombres depuis la blockchain',
    'desc.address_storage': 'Découvrez le stockage chiffré des adresses Ethereum',
    'desc.address_decrypt': 'Entraînez‑vous au déchiffrement d’adresses',
    'desc.onchain_decrypt': 'Apprenez requestDecryption pour le déchiffrement asynchrone on‑chain',
    'desc.calculations': 'Explorez la puissance des calculs homomorphes',
    'desc.number_comparison': 'Apprenez la comparaison chiffrée et la logique conditionnelle',
    'conclusion.title': '🎉 Félicitations pour la fin du cours !',
    'conclusion.desc': 'Vous avez maîtrisé les concepts clés de la technologie FHE de Zama :',
    'conclusion.li1': '✅ Compréhension des principes de base du FHE',
    'conclusion.li2': '✅ Utilisation du SDK frontend de Zama',
    'conclusion.li3': '✅ Maîtrise du stockage et de la récupération de données chiffrées',
    'conclusion.li4': '✅ Expérience des capacités de calcul préservant la vie privée',
    'conclusion.next_steps': '🚀 Prochaines étapes :',
    'conclusion.next1': 'Essayez de créer votre propre DApp préservant la vie privée',
    'conclusion.next2': 'Approfondissez les fonctionnalités avancées de la bibliothèque Solidity de Zama',
    'conclusion.next3': 'Explorez des algorithmes FHE et des cas d\'usage plus complexes',
    'conclusion.next4': 'Rejoignez la communauté Zama et partagez votre expérience',
    // ZamaIntro
    'zama.title': 'Introduction à la technologie Zama',
    'zama.what_is': 'Qu\'est-ce que Zama ?',
    'zama.what_is_desc': 'Zama est une entreprise pionnière dans la technologie de chiffrement homomorphe complet (FHE), dédiée à permettre aux applications blockchain d\'effectuer des calculs directement sur des données chiffrées sans les déchiffrer, réalisant ainsi un calcul véritablement préservant la vie privée.',
    'zama.core_tech': 'Technologies clés :',
    'zama.core_tech_1': 'Chiffrement homomorphe complet (FHE)',
    'zama.core_tech_2': 'Intégration de preuves à divulgation nulle',
    'zama.core_tech_3': 'Contrats intelligents préservant la vie privée',
    'zama.core_tech_4': 'Chiffrement programmable',
    'zama.use_cases': 'Scénarios d\'application :',
    'zama.use_case_1': 'Protocoles DeFi privés',
    'zama.use_case_2': 'Systèmes de vote confidentiels',
    'zama.use_case_3': 'Plateformes d\'enchères privées',
    'zama.use_case_4': 'Calcul AI protégé',
    'zama.fhe_principles': 'Principes du chiffrement homomorphe complet',
    'zama.traditional_vs_fhe': 'Chiffrement traditionnel vs FHE :',
    'zama.traditional': 'Chiffrement traditionnel',
    'zama.traditional_desc': 'Les données doivent être déchiffrées avant le calcul\nDonnées exposées pendant le calcul\nProtection de la vie privée limitée',
    'zama.fhe': 'Chiffrement FHE',
    'zama.fhe_desc': 'Calcul direct sur les données chiffrées\nDonnées restent chiffrées en permanence\nProtection complète de la vie privée',
    'zama.fhe_examples': 'Exemples d\'opérations FHE :',
    'zama.traditional_approach': '// Approche traditionnelle :',
    'zama.fhe_approach': '// Approche FHE :',
    'zama.architecture': 'Composants de l\'architecture FHEVM',
    'zama.architecture_desc': 'Le FHEVM de Zama (Machine virtuelle de chiffrement homomorphe complet) est un écosystème complet de calcul préservant la vie privée :',
    'zama.solidity_lib': 'Bibliothèque Solidity',
    'zama.solidity_lib_desc': 'Fournit des types de données chiffrées (euint32, ebool, etc.) et des fonctions d\'opération FHE',
    'zama.kms': 'Gestion des clés KMS',
    'zama.kms_desc': 'Système de génération et de gestion distribuée des clés assurant la sécurité',
    'zama.coprocessor': 'Coprocesseur',
    'zama.coprocessor_desc': 'Unités de traitement spécialisées pour exécuter les calculs FHE avec des performances optimisées',
    'zama.gateway': 'Passerelle',
    'zama.gateway_desc': 'Coordonne les entrées chiffrées, le contrôle d\'accès et le pontage inter-chaînes',
    'zama.relayer': 'Relais',
    'zama.relayer_desc': 'Couche de service reliant les utilisateurs à l\'infrastructure FHE',
    'zama.oracle': 'Oracle',
    'zama.oracle_desc': 'Gère le déchiffrement asynchrone et l\'intégration de données externes',
    'zama.data_types': 'Types de données chiffrées pris en charge',
    'zama.ebool': 'Booléen chiffré',
    'zama.ebool_desc': 'Type booléen chiffré 2 bits',
    'zama.euints': 'Entiers chiffrés',
    'zama.euints_desc': 'Entiers non signés de différentes longueurs',
    'zama.eaddress': 'Adresse chiffrée',
    'zama.eaddress_desc': 'Type d\'adresse Ethereum 160 bits',
    'zama.euint256': 'Grand entier',
    'zama.euint256_desc': 'Type de grand nombre 256 bits',
    'zama.operations': 'Opérations FHE',
    'zama.arithmetic': 'Opérations arithmétiques',
    'zama.comparison': 'Opérations de comparaison',
    'zama.logical': 'Opérations logiques',
    'zama.learning_journey': 'Votre parcours d\'apprentissage',
    'zama.learning_journey_desc': 'À travers ce cours, vous maîtriserez progressivement les concepts fondamentaux et les applications pratiques de la technologie FHE de Zama :',
    'zama.fundamentals': 'Fondamentaux',
    'zama.fundamentals_1': 'Configuration et initialisation du SDK',
    'zama.fundamentals_2': 'Stockage de données chiffrées',
    'zama.fundamentals_3': 'Opérations de déchiffrement utilisateur',
    'zama.advanced': 'Sujets avancés',
    'zama.advanced_1': 'Déchiffrement asynchrone on-chain',
    'zama.advanced_2': 'Opérations de calcul FHE',
    'zama.advanced_3': 'Scénarios d\'application complexes',
    'zama.ready': 'Prêt à commencer votre parcours de calcul privé ?',
    // SDK Demo
    'sdk.title': 'Étape 1 : Introduction au SDK frontend Zama',
    'sdk.what_is': 'Qu\'est-ce que le SDK Zama ?',
    'sdk.what_is_desc': 'Le SDK Zama est une bibliothèque JavaScript utilisée pour interagir avec FHEVM (Machine virtuelle de chiffrement homomorphe complet) dans les applications frontend.',
    'sdk.feature_1': 'Prend en charge le chiffrement et le déchiffrement des données',
    'sdk.feature_2': 'Intégration transparente avec les contrats intelligents',
    'sdk.feature_3': 'Protège la confidentialité des données utilisateur',
    'sdk.code_example': 'Exemple de code frontend :',
    'sdk.step1': 'Étape 1 : Installer le SDK',
    'sdk.install_btn': 'Cliquer pour installer le SDK',
    'sdk.install_success': 'SDK installé avec succès !',
    'sdk.step2': 'Étape 2 : Initialiser le SDK',
    'sdk.init_desc': 'Cliquez sur le bouton ci-dessous pour initialiser le SDK Zama. Cela créera une instance FHEVM pour les opérations de chiffrement ultérieures.',
    'sdk.connect_wallet': 'Veuillez connecter votre portefeuille avant d\'initialiser le SDK',
    'sdk.initializing': 'Initialisation...',
    'sdk.init_btn': 'Cliquer pour initialiser le SDK',
    'sdk.init_success': 'SDK initialisé avec succès !',
    'sdk.init_failed': 'Échec de l\'initialisation :',
    'sdk.instance_created': 'Instance FHEVM créée',
    'sdk.instance_desc': 'Le SDK a été initialisé avec succès, vous pouvez maintenant effectuer des opérations de chiffrement !',
    'sdk.config_title': 'Configuration de l\'instance :',
    'sdk.config_network': 'Réseau : Testnet Sepolia',
    'sdk.config_chain': 'ID de chaîne : 11155111',
    'sdk.config_gateway': 'ID de chaîne Gateway : 55815',
    'sdk.config_relayer': 'Service Relayer : Connecté',
    'sdk.next_learn': 'Ce que vous apprendrez ensuite :',
    'sdk.next_1': 'Stockage de nombres chiffrés',
    'sdk.next_2': 'Déchiffrement et récupération de nombres',
    'sdk.next_3': 'Stockage d\'adresses chiffrées',
    'sdk.next_4': 'Déchiffrement et récupération d\'adresses',
    'sdk.next_5': 'Opérations de calcul FHE',
    'sdk.note': 'Note :',
    'sdk.note_desc': 'Veuillez terminer l\'initialisation du SDK avant de passer à l\'étape suivante. Le processus d\'initialisation crée une connexion au réseau Zama, ce qui est un prérequis pour effectuer des opérations de chiffrement.'
  }
}

export const I18nProvider = ({ children }) => {
  const [lang, setLang] = useState('en')

  useEffect(() => {
    const saved = typeof window !== 'undefined' ? window.localStorage.getItem('lang') : null
    if (saved && translations[saved]) {
      setLang(saved)
    }
  }, [])

  const t = useMemo(() => {
    const dict = translations[lang] || translations.en
    return (key) => dict[key] || translations.en[key] || key
  }, [lang])

  const value = useMemo(() => ({
    lang,
    setLang: (l) => {
      if (translations[l]) {
        setLang(l)
        if (typeof window !== 'undefined') window.localStorage.setItem('lang', l)
      }
    },
    t
  }), [lang, t])

  return (
    <I18nContext.Provider value={value}>
      {children}
    </I18nContext.Provider>
  )
}

export const useI18n = () => useContext(I18nContext)
